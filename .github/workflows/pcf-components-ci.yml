# This is a GitHub Actions workflow for Continuous Integration (CI) of PCF components.
# The workflow is triggered on every push only under the "src/pcf-components" folder to the main branch.
# 
# The workflow performs the following steps:
# 1. Setup: It sets up the required environment with the necessary versions of Node.js and npm.
# 3. Using tj-actions/changed-files list the changed files. And then go through this list of changed files and identify the PCF component that has been updated and set it as an environment variable.
# 3. Install Dependencies: It installs all the dependencies defined in the package.json file.
# 4. Build: It builds the PCF components located under the "src/pcf-components" folder using the 'npm run build' command - we can have multiple PCF components implemented there.
# 5. Test: It runs unit tests using the 'npm test' command.
# 6. Setup msbuild: Using the microsoft/setup-msbuild@v2 GitHub action to install msbuild on the runner.
# 7. Pack solution: Run msbuild after installing it on the cdsproj file located under the "src/solutions/PCFComponents" folder to create the solution zip file.
# 8. Deploy: It deploys the solution zip file to the Dataverse environment using the "microsoft/powerplatform-actions/import-solution@main" GitHub action leveraging the "DATAVERSE_ENVIRONMENT_URL", "CLIENT_ID" and "CLIENT_SECRET" GitHub environment secrets and variables.

name: PCF Components CI

on:
  push:
    paths:
      - 'src/pcf-components/**'
    branches:
      - main

jobs:
    build-and-deploy:
        runs-on: windows-latest
        environment:
            name: 'Sandbox'
    
        steps:
        - name: Checkout repository
          uses: actions/checkout@v2
    
        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '14'

        - name: List changed files
          id: changed-files
          uses: tj-actions/changed-files@v41

        - name: Identify the changed PCF Component in the changed file
          run: |
            echo "Changed files: ${{ steps.changed-files.outputs.files }}"
            for file in ${{ steps.changed-files.outputs.files }}; do
              if [[ $file == src/pcf-components/* ]]; then
                UPDATED_PCF_COMPONENT=$(echo $file | cut -d'/' -f3)
                echo "Updated PCF Component: $UPDATED_PCF_COMPONENT"
                echo "UPDATED_PCF_COMPONENT=$UPDATED_PCF_COMPONENT" >> $GITHUB_ENV
                break
              fi
            done
          shell: bash
    
        - name: Install Dependencies
          run: npm install
          working-directory: src/pcf-components/${{ env.UPDATED_PCF_COMPONENT }}
    
        - name: Build
          run: npm run build
          working-directory: src/pcf-components/${{ env.UPDATED_PCF_COMPONENT }}
    
        - name: Test
          run: npm test
          working-directory: src/pcf-components/${{ env.UPDATED_PCF_COMPONENT }}
    
        - name: Setup msbuild
          uses: microsoft/setup-msbuild@v2
    
        - name: Pack solution
          run: msbuild src/solutions/PCFComponents/PCFComponents.csproj /t:pack /p:Configuration=Release
    
        - name: Deploy
          uses: microsoft/powerplatform-actions/import-solution@main
          with:
            app-id: ${{ secrets.CLIENT_ID }}
            client-secret: ${{ secrets.CLIENT_SECRET }}
            tenant-id: ${{ secrets.TENANT_ID }}
            environment-url: ${{ secrets.DATAVERSE_ENVIRONMENT_URL }}
            solution-file: src/solutions/PCFComponents/bin/Release/PCFComponents.zip
            force-overwrite: true
            publish-changes: true
            skip-dependency-check: false
            stage-and-upgrade: false
            run-asynchronously: true
            use-deployment-settings-file: false
            skip-lower-version: false
